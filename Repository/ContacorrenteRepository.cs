using System;using System.Collections.Generic;using System.Data;using System.Linq;using System.Threading.Tasks;using drhipocratesCore.Config;using drhipocratesCore.Model;using MySql.Data;using MySql.Data.MySqlClient;namespace drhipocratesCore.Repository{   public class ContacorrenteRepository   {      String connect = Connect.getConnect;              public List<Contacorrente> List()         {             MySqlConnection conn = new MySqlConnection(connect);             System.Text.StringBuilder query = new System.Text.StringBuilder();             query.Append("select idcontacorrente, idassociado, datasaldo, saldo from contacorrente");                  MySqlCommand comm = new MySqlCommand(query.ToString(), conn);             MySqlDataReader dr = null;             List<Contacorrente> lista = new List<Contacorrente>();                  try             {                 conn.Open();                 dr = comm.ExecuteReader(CommandBehavior.CloseConnection);                      while (dr.Read())                     {                     Contacorrente unitario = new Contacorrente();                          unitario.idcontacorrente = dr.IsDBNull(0) ? 0 : dr.GetInt32(0);                     unitario.idassociado = dr.IsDBNull(1) ? 0 : dr.GetInt32(1);                     unitario.datasaldo = dr.IsDBNull(2) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(2);                     unitario.saldo = dr.IsDBNull(3) ? 0 : dr.GetFloat(3);                          lista.Add(unitario);                     }             }             catch (Exception ex)             {                 string ERRO = ex.Message;                 return new List<Contacorrente>();             }             finally             { conn.Close(); }                  return lista;         }              public Contacorrente Get(int primary_key)         {             MySqlConnection conn = new MySqlConnection(connect);             System.Text.StringBuilder query = new System.Text.StringBuilder();             query.Append("select idcontacorrente, idassociado, datasaldo, saldo from contacorrente where idcontacorrente = @idcontacorrente");                  MySqlCommand comm = new MySqlCommand(query.ToString(), conn);             comm.Parameters.Add("@idcontacorrente", MySqlDbType.Int32);             comm.Parameters[0].Value = primary_key;             MySqlDataReader dr = null;             Contacorrente lista = new Contacorrente();             try             {                 conn.Open();                 dr = comm.ExecuteReader(CommandBehavior.CloseConnection);                      while (dr.Read())                     {                     Contacorrente unitario = new Contacorrente();                          unitario.idcontacorrente = dr.IsDBNull(0) ? 0 : dr.GetInt32(0);                     unitario.idassociado = dr.IsDBNull(1) ? 0 : dr.GetInt32(1);                     unitario.datasaldo = dr.IsDBNull(2) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(2);                     unitario.saldo = dr.IsDBNull(3) ? 0 : dr.GetFloat(3);                          lista = unitario;                     }             }             catch (Exception ex)             {                 string ERRO = ex.Message;                 return new Contacorrente();             }             finally             { conn.Close(); }                  return lista;         }    public int Post(Contacorrente contacorrente)    {        MySqlConnection conn = new MySqlConnection(connect);        System.Text.StringBuilder query = new System.Text.StringBuilder();        query.Append("insert into contacorrente (idassociado, datasaldo, saldo) values (@idassociado, @datasaldo, @saldo)");        MySqlCommand comm = new MySqlCommand(query.ToString(), conn);        comm.Parameters.Add("@idassociado", MySqlDbType.Int32 );        comm.Parameters.Add("@datasaldo", MySqlDbType.DateTime );        comm.Parameters.Add("@saldo", MySqlDbType.Float );        comm.Parameters[0].Value = contacorrente.idassociado;        comm.Parameters[1].Value = contacorrente.datasaldo;        comm.Parameters[2].Value = contacorrente.saldo;        Int32 id = 0;        try        {            conn.Open();            comm.ExecuteNonQuery();            query.Clear();            query.Append("Select @@Identity");            comm.CommandText = query.ToString();            var resultado = comm.ExecuteScalar();            id = Convert.ToInt32(resultado);        }        catch (Exception ex)        {            string ERRO = ex.Message;            return 0;        }        finally        { conn.Close(); }        return id;    }    public int Put(Contacorrente contacorrente)    {        MySqlConnection conn = new MySqlConnection(connect);        System.Text.StringBuilder query = new System.Text.StringBuilder();        query.Append("update contacorrente set idcontacorrente = @idcontacorrente, idassociado = @idassociado, datasaldo = @datasaldo, saldo = @saldo where idcontacorrente = @idcontacorrente");        MySqlCommand comm = new MySqlCommand(query.ToString(), conn);        comm.Parameters.Add("@idcontacorrente", MySqlDbType.Int32 );        comm.Parameters.Add("@idassociado", MySqlDbType.Int32 );        comm.Parameters.Add("@datasaldo", MySqlDbType.DateTime );        comm.Parameters.Add("@saldo", MySqlDbType.Float );        comm.Parameters[0].Value = contacorrente.idcontacorrente;        comm.Parameters[1].Value = contacorrente.idassociado;        comm.Parameters[2].Value = contacorrente.datasaldo;        comm.Parameters[3].Value = contacorrente.saldo;        try        {            conn.Open();            return comm.ExecuteNonQuery();        }        catch (Exception ex)        {            string ERRO = ex.Message;            return 0;        }        finally        { conn.Close(); }    }    public int Delete(int idcontacorrente)    {        MySqlConnection conn = new MySqlConnection(connect);        System.Text.StringBuilder query = new System.Text.StringBuilder();        query.Append("delete from contacorrente where idcontacorrente = @idcontacorrente");        MySqlCommand comm = new MySqlCommand(query.ToString(), conn);        comm.Parameters.Add("@idcontacorrente", MySqlDbType.Int32 );        comm.Parameters[0].Value = idcontacorrente;        try        {            conn.Open();            return comm.ExecuteNonQuery();        }        catch (Exception ex)        {            string ERRO = ex.Message;            return 0;        }        finally        { conn.Close(); }    }   }}