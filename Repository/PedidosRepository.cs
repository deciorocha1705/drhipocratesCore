using System;using System.Collections.Generic;using System.Data;using System.Linq;using System.Threading.Tasks;using drhipocratesCore.Config;using drhipocratesCore.Model;using MySql.Data;using MySql.Data.MySqlClient;namespace drhipocratesCore.Repository{   public class PedidosRepository   {      String connect = Connect.getConnect;              public List<Pedidos> List()         {             MySqlConnection conn = new MySqlConnection(connect);             System.Text.StringBuilder query = new System.Text.StringBuilder();             query.Append("select idpedidos, idassociado, datapedido, valorpedido, datapagamento, datapedidosolicitadofornecedor, datapedidorecebido, datapedidoentregue, tipopedido from pedidos");                  MySqlCommand comm = new MySqlCommand(query.ToString(), conn);             MySqlDataReader dr = null;             List<Pedidos> lista = new List<Pedidos>();                  try             {                 conn.Open();                 dr = comm.ExecuteReader(CommandBehavior.CloseConnection);                      while (dr.Read())                     {                     Pedidos unitario = new Pedidos();                          unitario.idpedidos = dr.IsDBNull(0) ? 0 : dr.GetInt32(0);                     unitario.idassociado = dr.IsDBNull(1) ? 0 : dr.GetInt32(1);                     unitario.datapedido = dr.IsDBNull(2) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(2);                     unitario.valorpedido = dr.IsDBNull(3) ? 0 : dr.GetFloat(3);                     unitario.datapagamento = dr.IsDBNull(4) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(4);                     unitario.datapedidosolicitadofornecedor = dr.IsDBNull(5) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(5);                     unitario.datapedidorecebido = dr.IsDBNull(6) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(6);                     unitario.datapedidoentregue = dr.IsDBNull(7) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(7);                     unitario.tipopedido = dr.IsDBNull(8) ? "" : dr.GetString(8);                          lista.Add(unitario);                     }             }             catch (Exception ex)             {                 string ERRO = ex.Message;                 return new List<Pedidos>();             }             finally             { conn.Close(); }                  return lista;         }              public Pedidos Get(int primary_key)         {             MySqlConnection conn = new MySqlConnection(connect);             System.Text.StringBuilder query = new System.Text.StringBuilder();             query.Append("select idpedidos, idassociado, datapedido, valorpedido, datapagamento, datapedidosolicitadofornecedor, datapedidorecebido, datapedidoentregue, tipopedido from pedidos where idpedidos = @idpedidos");                  MySqlCommand comm = new MySqlCommand(query.ToString(), conn);             comm.Parameters.Add("@idpedidos", MySqlDbType.Int32);             comm.Parameters[0].Value = primary_key;             MySqlDataReader dr = null;             Pedidos lista = new Pedidos();             try             {                 conn.Open();                 dr = comm.ExecuteReader(CommandBehavior.CloseConnection);                      while (dr.Read())                     {                     Pedidos unitario = new Pedidos();                          unitario.idpedidos = dr.IsDBNull(0) ? 0 : dr.GetInt32(0);                     unitario.idassociado = dr.IsDBNull(1) ? 0 : dr.GetInt32(1);                     unitario.datapedido = dr.IsDBNull(2) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(2);                     unitario.valorpedido = dr.IsDBNull(3) ? 0 : dr.GetFloat(3);                     unitario.datapagamento = dr.IsDBNull(4) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(4);                     unitario.datapedidosolicitadofornecedor = dr.IsDBNull(5) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(5);                     unitario.datapedidorecebido = dr.IsDBNull(6) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(6);                     unitario.datapedidoentregue = dr.IsDBNull(7) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(7);                     unitario.tipopedido = dr.IsDBNull(8) ? "" : dr.GetString(8);                          lista = unitario;                     }             }             catch (Exception ex)             {                 string ERRO = ex.Message;                 return new Pedidos();             }             finally             { conn.Close(); }                  return lista;         }    public int Post(Pedidos pedidos)    {        MySqlConnection conn = new MySqlConnection(connect);        System.Text.StringBuilder query = new System.Text.StringBuilder();        query.Append("insert into pedidos (idassociado, datapedido, valorpedido, datapagamento, datapedidosolicitadofornecedor, datapedidorecebido, datapedidoentregue, tipopedido) values (@idassociado, @datapedido, @valorpedido, @datapagamento, @datapedidosolicitadofornecedor, @datapedidorecebido, @datapedidoentregue, @tipopedido)");        MySqlCommand comm = new MySqlCommand(query.ToString(), conn);        comm.Parameters.Add("@idassociado", MySqlDbType.Int32 );        comm.Parameters.Add("@datapedido", MySqlDbType.DateTime );        comm.Parameters.Add("@valorpedido", MySqlDbType.Float );        comm.Parameters.Add("@datapagamento", MySqlDbType.DateTime );        comm.Parameters.Add("@datapedidosolicitadofornecedor", MySqlDbType.DateTime );        comm.Parameters.Add("@datapedidorecebido", MySqlDbType.DateTime );        comm.Parameters.Add("@datapedidoentregue", MySqlDbType.DateTime );        comm.Parameters.Add("@tipopedido", MySqlDbType.VarChar );        comm.Parameters[0].Value = pedidos.idassociado;        comm.Parameters[1].Value = pedidos.datapedido;        comm.Parameters[2].Value = pedidos.valorpedido;        comm.Parameters[3].Value = pedidos.datapagamento;        comm.Parameters[4].Value = pedidos.datapedidosolicitadofornecedor;        comm.Parameters[5].Value = pedidos.datapedidorecebido;        comm.Parameters[6].Value = pedidos.datapedidoentregue;        comm.Parameters[7].Value = pedidos.tipopedido;        Int32 id = 0;        try        {            conn.Open();            comm.ExecuteNonQuery();            query.Clear();            query.Append("Select @@Identity");            comm.CommandText = query.ToString();            var resultado = comm.ExecuteScalar();            id = Convert.ToInt32(resultado);        }        catch (Exception ex)        {            string ERRO = ex.Message;            return 0;        }        finally        { conn.Close(); }        return id;    }    public int Put(Pedidos pedidos)    {        MySqlConnection conn = new MySqlConnection(connect);        System.Text.StringBuilder query = new System.Text.StringBuilder();        query.Append("update pedidos set idpedidos = @idpedidos, idassociado = @idassociado, datapedido = @datapedido, valorpedido = @valorpedido, datapagamento = @datapagamento, datapedidosolicitadofornecedor = @datapedidosolicitadofornecedor, datapedidorecebido = @datapedidorecebido, datapedidoentregue = @datapedidoentregue, tipopedido = @tipopedido where idpedidos = @idpedidos");        MySqlCommand comm = new MySqlCommand(query.ToString(), conn);        comm.Parameters.Add("@idpedidos", MySqlDbType.Int32 );        comm.Parameters.Add("@idassociado", MySqlDbType.Int32 );        comm.Parameters.Add("@datapedido", MySqlDbType.DateTime );        comm.Parameters.Add("@valorpedido", MySqlDbType.Float );        comm.Parameters.Add("@datapagamento", MySqlDbType.DateTime );        comm.Parameters.Add("@datapedidosolicitadofornecedor", MySqlDbType.DateTime );        comm.Parameters.Add("@datapedidorecebido", MySqlDbType.DateTime );        comm.Parameters.Add("@datapedidoentregue", MySqlDbType.DateTime );        comm.Parameters.Add("@tipopedido", MySqlDbType.VarChar );        comm.Parameters[0].Value = pedidos.idpedidos;        comm.Parameters[1].Value = pedidos.idassociado;        comm.Parameters[2].Value = pedidos.datapedido;        comm.Parameters[3].Value = pedidos.valorpedido;        comm.Parameters[4].Value = pedidos.datapagamento;        comm.Parameters[5].Value = pedidos.datapedidosolicitadofornecedor;        comm.Parameters[6].Value = pedidos.datapedidorecebido;        comm.Parameters[7].Value = pedidos.datapedidoentregue;        comm.Parameters[8].Value = pedidos.tipopedido;        try        {            conn.Open();            return comm.ExecuteNonQuery();        }        catch (Exception ex)        {            string ERRO = ex.Message;            return 0;        }        finally        { conn.Close(); }    }    public int Delete(int idpedidos)    {        MySqlConnection conn = new MySqlConnection(connect);        System.Text.StringBuilder query = new System.Text.StringBuilder();        query.Append("delete from pedidos where idpedidos = @idpedidos");        MySqlCommand comm = new MySqlCommand(query.ToString(), conn);        comm.Parameters.Add("@idpedidos", MySqlDbType.Int32 );        comm.Parameters[0].Value = idpedidos;        try        {            conn.Open();            return comm.ExecuteNonQuery();        }        catch (Exception ex)        {            string ERRO = ex.Message;            return 0;        }        finally        { conn.Close(); }    }   }}