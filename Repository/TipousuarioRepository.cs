using System;using System.Collections.Generic;using System.Data;using System.Linq;using System.Threading.Tasks;using drhipocratesCore.Config;using drhipocratesCore.Model;using MySql.Data;using MySql.Data.MySqlClient;namespace drhipocratesCore.Repository{   public class TipousuarioRepository   {      String connect = Connect.getConnect;              public List<Tipousuario> List()         {             MySqlConnection conn = new MySqlConnection(connect);             System.Text.StringBuilder query = new System.Text.StringBuilder();             query.Append("select idtipousuario, siglatipousuario, descricao from tipousuario");                  MySqlCommand comm = new MySqlCommand(query.ToString(), conn);             MySqlDataReader dr = null;             List<Tipousuario> lista = new List<Tipousuario>();                  try             {                 conn.Open();                 dr = comm.ExecuteReader(CommandBehavior.CloseConnection);                      while (dr.Read())                     {                     Tipousuario unitario = new Tipousuario();                          unitario.idtipousuario = dr.IsDBNull(0) ? 0 : dr.GetInt32(0);                     unitario.siglatipousuario = dr.IsDBNull(1) ? "" : dr.GetString(1);                     unitario.descricao = dr.IsDBNull(2) ? "" : dr.GetString(2);                          lista.Add(unitario);                     }             }             catch (Exception ex)             {                 string ERRO = ex.Message;                 return new List<Tipousuario>();             }             finally             { conn.Close(); }                  return lista;         }              public Tipousuario Get(int primary_key)         {             MySqlConnection conn = new MySqlConnection(connect);             System.Text.StringBuilder query = new System.Text.StringBuilder();             query.Append("select idtipousuario, siglatipousuario, descricao from tipousuario where idtipousuario = @idtipousuario");                  MySqlCommand comm = new MySqlCommand(query.ToString(), conn);             comm.Parameters.Add("@idtipousuario", MySqlDbType.Int32);             comm.Parameters[0].Value = primary_key;             MySqlDataReader dr = null;             Tipousuario lista = new Tipousuario();             try             {                 conn.Open();                 dr = comm.ExecuteReader(CommandBehavior.CloseConnection);                      while (dr.Read())                     {                     Tipousuario unitario = new Tipousuario();                          unitario.idtipousuario = dr.IsDBNull(0) ? 0 : dr.GetInt32(0);                     unitario.siglatipousuario = dr.IsDBNull(1) ? "" : dr.GetString(1);                     unitario.descricao = dr.IsDBNull(2) ? "" : dr.GetString(2);                          lista = unitario;                     }             }             catch (Exception ex)             {                 string ERRO = ex.Message;                 return new Tipousuario();             }             finally             { conn.Close(); }                  return lista;         }    public int Post(Tipousuario tipousuario)    {        MySqlConnection conn = new MySqlConnection(connect);        System.Text.StringBuilder query = new System.Text.StringBuilder();        query.Append("insert into tipousuario (siglatipousuario, descricao) values (@siglatipousuario, @descricao)");        MySqlCommand comm = new MySqlCommand(query.ToString(), conn);        comm.Parameters.Add("@siglatipousuario", MySqlDbType.VarChar );        comm.Parameters.Add("@descricao", MySqlDbType.VarChar );        comm.Parameters[0].Value = tipousuario.siglatipousuario;        comm.Parameters[1].Value = tipousuario.descricao;        Int32 id = 0;        try        {            conn.Open();            comm.ExecuteNonQuery();            query.Clear();            query.Append("Select @@Identity");            comm.CommandText = query.ToString();            var resultado = comm.ExecuteScalar();            id = Convert.ToInt32(resultado);        }        catch (Exception ex)        {            string ERRO = ex.Message;            return 0;        }        finally        { conn.Close(); }        return id;    }    public int Put(Tipousuario tipousuario)    {        MySqlConnection conn = new MySqlConnection(connect);        System.Text.StringBuilder query = new System.Text.StringBuilder();        query.Append("update tipousuario set idtipousuario = @idtipousuario, siglatipousuario = @siglatipousuario, descricao = @descricao where idtipousuario = @idtipousuario");        MySqlCommand comm = new MySqlCommand(query.ToString(), conn);        comm.Parameters.Add("@idtipousuario", MySqlDbType.Int32 );        comm.Parameters.Add("@siglatipousuario", MySqlDbType.VarChar );        comm.Parameters.Add("@descricao", MySqlDbType.VarChar );        comm.Parameters[0].Value = tipousuario.idtipousuario;        comm.Parameters[1].Value = tipousuario.siglatipousuario;        comm.Parameters[2].Value = tipousuario.descricao;        try        {            conn.Open();            return comm.ExecuteNonQuery();        }        catch (Exception ex)        {            string ERRO = ex.Message;            return 0;        }        finally        { conn.Close(); }    }    public int Delete(int idtipousuario)    {        MySqlConnection conn = new MySqlConnection(connect);        System.Text.StringBuilder query = new System.Text.StringBuilder();        query.Append("delete from tipousuario where idtipousuario = @idtipousuario");        MySqlCommand comm = new MySqlCommand(query.ToString(), conn);        comm.Parameters.Add("@idtipousuario", MySqlDbType.Int32 );        comm.Parameters[0].Value = idtipousuario;        try        {            conn.Open();            return comm.ExecuteNonQuery();        }        catch (Exception ex)        {            string ERRO = ex.Message;            return 0;        }        finally        { conn.Close(); }    }   }}