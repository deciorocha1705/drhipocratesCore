using System;using System.Collections.Generic;using System.Data;using System.Linq;using System.Threading.Tasks;using drhipocratesCore.Config;using drhipocratesCore.Model;using MySql.Data;using MySql.Data.MySqlClient;namespace drhipocratesCore.Repository{   public class PedidoscomissionadosRepository   {      String connect = Connect.getConnect;              public List<Pedidoscomissionados> List()         {             MySqlConnection conn = new MySqlConnection(connect);             System.Text.StringBuilder query = new System.Text.StringBuilder();             query.Append("select idpedidoscomissionados, idassociadopedido, idassociadobonificado, valorbonificacao, databonificacao, idpedido from pedidoscomissionados");                  MySqlCommand comm = new MySqlCommand(query.ToString(), conn);             MySqlDataReader dr = null;             List<Pedidoscomissionados> lista = new List<Pedidoscomissionados>();                  try             {                 conn.Open();                 dr = comm.ExecuteReader(CommandBehavior.CloseConnection);                      while (dr.Read())                     {                     Pedidoscomissionados unitario = new Pedidoscomissionados();                          unitario.idpedidoscomissionados = dr.IsDBNull(0) ? 0 : dr.GetInt32(0);                     unitario.idassociadopedido = dr.IsDBNull(1) ? 0 : dr.GetInt32(1);                     unitario.idassociadobonificado = dr.IsDBNull(2) ? 0 : dr.GetInt32(2);                     unitario.valorbonificacao = dr.IsDBNull(3) ? 0 : dr.GetFloat(3);                     unitario.databonificacao = dr.IsDBNull(4) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(4);                     unitario.idpedido = dr.IsDBNull(5) ? 0 : dr.GetInt32(5);                          lista.Add(unitario);                     }             }             catch (Exception ex)             {                 string ERRO = ex.Message;                 return new List<Pedidoscomissionados>();             }             finally             { conn.Close(); }                  return lista;         }              public Pedidoscomissionados Get(int primary_key)         {             MySqlConnection conn = new MySqlConnection(connect);             System.Text.StringBuilder query = new System.Text.StringBuilder();             query.Append("select idpedidoscomissionados, idassociadopedido, idassociadobonificado, valorbonificacao, databonificacao, idpedido from pedidoscomissionados where idpedidoscomissionados = @idpedidoscomissionados");                  MySqlCommand comm = new MySqlCommand(query.ToString(), conn);             comm.Parameters.Add("@idpedidoscomissionados", MySqlDbType.Int32);             comm.Parameters[0].Value = primary_key;             MySqlDataReader dr = null;             Pedidoscomissionados lista = new Pedidoscomissionados();             try             {                 conn.Open();                 dr = comm.ExecuteReader(CommandBehavior.CloseConnection);                      while (dr.Read())                     {                     Pedidoscomissionados unitario = new Pedidoscomissionados();                          unitario.idpedidoscomissionados = dr.IsDBNull(0) ? 0 : dr.GetInt32(0);                     unitario.idassociadopedido = dr.IsDBNull(1) ? 0 : dr.GetInt32(1);                     unitario.idassociadobonificado = dr.IsDBNull(2) ? 0 : dr.GetInt32(2);                     unitario.valorbonificacao = dr.IsDBNull(3) ? 0 : dr.GetFloat(3);                     unitario.databonificacao = dr.IsDBNull(4) ? Convert.ToDateTime( "01/01/0001 00:00:00" ) : dr.GetDateTime(4);                     unitario.idpedido = dr.IsDBNull(5) ? 0 : dr.GetInt32(5);                          lista = unitario;                     }             }             catch (Exception ex)             {                 string ERRO = ex.Message;                 return new Pedidoscomissionados();             }             finally             { conn.Close(); }                  return lista;         }    public int Post(Pedidoscomissionados pedidoscomissionados)    {        MySqlConnection conn = new MySqlConnection(connect);        System.Text.StringBuilder query = new System.Text.StringBuilder();        query.Append("insert into pedidoscomissionados (idassociadopedido, idassociadobonificado, valorbonificacao, databonificacao, idpedido) values (@idassociadopedido, @idassociadobonificado, @valorbonificacao, @databonificacao, @idpedido)");        MySqlCommand comm = new MySqlCommand(query.ToString(), conn);        comm.Parameters.Add("@idassociadopedido", MySqlDbType.Int32 );        comm.Parameters.Add("@idassociadobonificado", MySqlDbType.Int32 );        comm.Parameters.Add("@valorbonificacao", MySqlDbType.Float );        comm.Parameters.Add("@databonificacao", MySqlDbType.DateTime );        comm.Parameters.Add("@idpedido", MySqlDbType.Int32 );        comm.Parameters[0].Value = pedidoscomissionados.idassociadopedido;        comm.Parameters[1].Value = pedidoscomissionados.idassociadobonificado;        comm.Parameters[2].Value = pedidoscomissionados.valorbonificacao;        comm.Parameters[3].Value = pedidoscomissionados.databonificacao;        comm.Parameters[4].Value = pedidoscomissionados.idpedido;        Int32 id = 0;        try        {            conn.Open();            comm.ExecuteNonQuery();            query.Clear();            query.Append("Select @@Identity");            comm.CommandText = query.ToString();            var resultado = comm.ExecuteScalar();            id = Convert.ToInt32(resultado);        }        catch (Exception ex)        {            string ERRO = ex.Message;            return 0;        }        finally        { conn.Close(); }        return id;    }    public int Put(Pedidoscomissionados pedidoscomissionados)    {        MySqlConnection conn = new MySqlConnection(connect);        System.Text.StringBuilder query = new System.Text.StringBuilder();        query.Append("update pedidoscomissionados set idpedidoscomissionados = @idpedidoscomissionados, idassociadopedido = @idassociadopedido, idassociadobonificado = @idassociadobonificado, valorbonificacao = @valorbonificacao, databonificacao = @databonificacao, idpedido = @idpedido where idpedidoscomissionados = @idpedidoscomissionados");        MySqlCommand comm = new MySqlCommand(query.ToString(), conn);        comm.Parameters.Add("@idpedidoscomissionados", MySqlDbType.Int32 );        comm.Parameters.Add("@idassociadopedido", MySqlDbType.Int32 );        comm.Parameters.Add("@idassociadobonificado", MySqlDbType.Int32 );        comm.Parameters.Add("@valorbonificacao", MySqlDbType.Float );        comm.Parameters.Add("@databonificacao", MySqlDbType.DateTime );        comm.Parameters.Add("@idpedido", MySqlDbType.Int32 );        comm.Parameters[0].Value = pedidoscomissionados.idpedidoscomissionados;        comm.Parameters[1].Value = pedidoscomissionados.idassociadopedido;        comm.Parameters[2].Value = pedidoscomissionados.idassociadobonificado;        comm.Parameters[3].Value = pedidoscomissionados.valorbonificacao;        comm.Parameters[4].Value = pedidoscomissionados.databonificacao;        comm.Parameters[5].Value = pedidoscomissionados.idpedido;        try        {            conn.Open();            return comm.ExecuteNonQuery();        }        catch (Exception ex)        {            string ERRO = ex.Message;            return 0;        }        finally        { conn.Close(); }    }    public int Delete(int idpedidoscomissionados)    {        MySqlConnection conn = new MySqlConnection(connect);        System.Text.StringBuilder query = new System.Text.StringBuilder();        query.Append("delete from pedidoscomissionados where idpedidoscomissionados = @idpedidoscomissionados");        MySqlCommand comm = new MySqlCommand(query.ToString(), conn);        comm.Parameters.Add("@idpedidoscomissionados", MySqlDbType.Int32 );        comm.Parameters[0].Value = idpedidoscomissionados;        try        {            conn.Open();            return comm.ExecuteNonQuery();        }        catch (Exception ex)        {            string ERRO = ex.Message;            return 0;        }        finally        { conn.Close(); }    }   }}